SELECT name, salary,
       RANK() OVER (ORDER BY salary DESC) AS salary_rank
FROM Employee;
SELECT name, salary,
       RANK() OVER (ORDER BY salary DESC),
       DENSE_RANK() OVER (ORDER BY salary DESC)
FROM Employee;
RANK(): Skips ranks after ties (1,1,3).

DENSE_RANK(): Does not skip (1,1,2).
----------------------------------------
CREATE INDEX idx_name ON Employee (employee_name);
show indexes from Employee;
.............................
CREATE UNIQUE INDEX index_name
ON table_name (column1, column2, ...); 
DROP INDEX index_name; 


//covered query
CREATE INDEX idx_name_salary ON Employee(name, salary);
SELECT name, salary FROM Employee WHERE name = 'John'; -- covered


//explain Shows the query execution plan without running it.
EXPLAIN SELECT * FROM Employee WHERE salary > 50000;

//////////////////////////////////////////////////
CREATE TRIGGER trigger_name
{BEFORE | AFTER} {INSERT | UPDATE | DELETE}
ON table_name
FOR EACH ROW
BEGIN
    -- SQL statements
END;

CREATE TRIGGER log_salary
AFTER UPDATE ON Employee
FOR EACH ROW EXECUTE FUNCTION log_change();
/////////////////////////////////////////////////////
CREATE PROCEDURE increase_salary(emp_id INT, inc NUMERIC)
LANGUAGE SQL AS $$
  UPDATE Employee SET salary = salary + inc WHERE id = emp_id;
$$;

////////////////////
DECLARE emp_cur CURSOR FOR SELECT * FROM Employee;
//limit
SELECT * FROM Customers LIMIT 3 OFFSET 3;
//////////////////////////////////
SELECT * FROM Customers
WHERE Country IN ('Germany', 'France', 'UK');
SELECT * FROM Customers
WHERE Country IN (SELECT Country FROM Suppliers);
SELECT * FROM Products
WHERE Price BETWEEN 10 AND 20;